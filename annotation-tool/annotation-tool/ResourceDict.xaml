<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    xmlns:views="clr-namespace:AnnotationTool.views"
    xmlns:viewmodels="clr-namespace:AnnotationTool.viewmodels"
    xmlns:local="clr-namespace:AnnotationTool">

    <!--<DataTemplate x:Name="PianoRollView" DataType="{x:Type viewmodels:PianoRollModel}">
        <views:PianoRollView DataContext="{Binding}"/>
    </DataTemplate>-->

    <FontFamily x:Key="Exo2Light">pack://application:,,,/gui/fonts/#Exo 2 Light</FontFamily>
    <FontFamily x:Key="Exo2LightItalic">pack://application:,,,/gui/fonts/#Exo 2 Light Italic</FontFamily>

    <core:Double x:Key="NoteWidth">132</core:Double>
    
    <Thickness x:Key="RightNoteMargin">0,1,0,0</Thickness>
    <core:Double x:Key="RightNoteHeight">25</core:Double>
    <core:Int32 x:Key="RightNoteSpan">2</core:Int32>

    <Thickness x:Key="LeftNoteMargin">0,10,0,0</Thickness>
    <core:Double x:Key="LeftNoteHeight">25</core:Double>
    <core:Int32 x:Key="LeftNoteSpan">2</core:Int32>

    <Thickness x:Key="MiddleNoteMargin">0,10,0,0</Thickness>
    <core:Double x:Key="MiddleNoteHeight">34</core:Double>
    <core:Int32 x:Key="MiddleNoteSpan">3</core:Int32>

    <Thickness x:Key="BlackNoteMargin">0,0,0,0</Thickness>
    <core:Double x:Key="BlackNoteHeight">26</core:Double>
    <core:Double x:Key="BlackNoteWidth">75</core:Double>
    <core:Int32 x:Key="BlackNoteSpan">1</core:Int32>

    <Thickness x:Key="TextMargin">113,15,0,0</Thickness>
    <core:Double x:Key="TextHeight">15</core:Double>
    <core:Double x:Key="TextWidth">20</core:Double>
    <core:Int32 x:Key="TextSpan">2</core:Int32>
    <Brush x:Key="TextColour">#8B8E9C</Brush>

    <Brush x:Key="ButtonColour">#6D7081</Brush>
    <Brush x:Key="ButtonMouseOverColour">#00CCCC</Brush>
    <Brush x:Key="ButtonPressedColour">#00B7B7</Brush>
    <Brush x:Key="MenuButtonMouseOverColour">#393C46</Brush>
    
    <Brush x:Key="GridLineColour">#07070A</Brush>
    <Brush x:Key="GridLightColour">#25262C</Brush>
    <Brush x:Key="GridDarkColour">#1D1E22</Brush>
    <Thickness x:Key="ThinBorderThickness">0.4</Thickness>
    <Thickness x:Key="BotBorderThickness">0,0,0,0.4</Thickness>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="{StaticResource Exo2Light}"/>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ButtonColour}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource Exo2Light}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource GridDarkColour}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonMouseOverColour}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonPressedColour}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource Exo2Light}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="50"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Colour" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}" BorderThickness="1">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0" Color="White" Opacity="1" BlurRadius="5"/>
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Opacity" Value="0.2" TargetName="Colour"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" Value="1" TargetName="Colour"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonMouseOverColour}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonColour}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
    </Style>

    <Style x:Key="TextArrowButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource TextToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonMouseOverColour}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonPressedColour}"/>
                        </Trigger>
                        
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Content" Value="&#xE96E;"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Content" Value="&#xE970;"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextViewButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource TextToggleButton}">
        <Setter Property="Content" Value="&#xE890;"/>
        <Setter Property="FontSize" Value="13"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonMouseOverColour}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonPressedColour}"/>
                        </Trigger>
                        
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonMouseOverColour}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ButtonColour}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonColour}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonMouseOverColour}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonPressedColour}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextDeleteButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButton}">
        <Setter Property="Content" Value="&#xE894;"/>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{StaticResource GridLightColour}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="{StaticResource Exo2Light}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid SnapsToDevicePixels="true">
                        <DockPanel>
                            <Border x:Name="ContentBorder" BorderThickness="1" BorderBrush="{StaticResource GridLightColour}" Background="{StaticResource GridLightColour}">
                                <ContentPresenter x:Name="Content" ContentSource="Header" Margin="7,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </DockPanel>
                        <Popup x:Name="Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="0" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
                            <Border BorderThickness="0.5" BorderBrush="{StaticResource ButtonColour}" Background="{StaticResource GridLightColour}">
                                <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource MenuButtonMouseOverColour}" TargetName="ContentBorder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border 
                        BorderBrush="{StaticResource MenuButtonMouseOverColour}"
                        BorderThickness="1" 
                        Height="1" 
                        SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarTrackThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent"/>
                        <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto"/>
                            <Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Width" Value="7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="7" Background="{StaticResource GridDarkColour}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb"
                                    Background="{StaticResource ButtonColour}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false"/>
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{StaticResource ButtonMouseOverColour}" TargetName="Thumb" Property="Background"/>
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{StaticResource ButtonPressedColour}" TargetName="Thumb" Property="Background"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="GridRoot" Property="Width" Value="7.5">
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalSeparatorStyle" TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Type Separator}}">
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <TransformGroup>
                    <TransformGroup.Children>
                        <TransformCollection>
                            <RotateTransform Angle="90"/>
                        </TransformCollection>
                    </TransformGroup.Children>
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>